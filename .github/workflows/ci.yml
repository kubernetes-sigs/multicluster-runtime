name: CI
on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
    branches:
      - main

permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
  # Optional: Allow write access to checks to allow the action to annotate code in the PR.
  checks: write

jobs:
  golangci-lint-matrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        working-directory:
          - ""
          - examples/kind
          - providers/kind
          - examples/cluster-api
          - providers/cluster-api
    name: golangci-lint [${{ matrix.working-directory }}]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # tag=v4.2.2
      - name: Calculate go version
        id: vars
        run: echo "go_version=$(make go-version)" >> $GITHUB_OUTPUT
      - name: Set up Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # tag=v5.3.0
        with:
          go-version: ${{ steps.vars.outputs.go_version }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 # tag=v6.5.2
        with:
          version: v1.64.5
          args: --out-format=colored-line-number
          working-directory: ${{matrix.working-directory}}

  golangci-lint: # aggregate the results of the matrix job. This we can depend on in the branch protection rule.
    name: golangci-lint
    runs-on: ubuntu-latest
    needs:
    - golangci-lint-matrix
    if: (failure() || success()) && !contains(needs.golangci-lint-matrix.result, 'skipped')
    steps:
    - name: noop
      run: exit 1
      if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')

  test:
    name: make test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # tag=v4.2.2
    - name: Calculate go version
      id: vars
      run: echo "go_version=$(make go-version)" >> $GITHUB_OUTPUT
    - name: Set up Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # tag=v5.3.0
      with:
        go-version: ${{ steps.vars.outputs.go_version }}
    - name: make test
      run: MAKEFLAGS="-s" make test
